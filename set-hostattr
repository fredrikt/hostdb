#!/usr/local/bin/perl -w
#
# $Id$
#
# script to set host attributes
#

use strict;
use HOSTDB;
use Getopt::Std;
use vars qw ($opt_h $opt_d $opt_v $opt_u $opt_f);

getopts ('hdvuf');

my $debug = defined ($opt_d);
my $verbose = defined ($opt_v);
my $update = defined ($opt_u);
my $force = defined ($opt_f);

$verbose = 1 if ($debug);

if ($#ARGV != 4 || $opt_h) {
	die (<<EOH);
Syntax: $0 [-dvuf] <ID/IP/FQDN/MAC> attribute section type value

	Options :
	  -d  debug
	  -v  verbose
	  -u  update lastupdated timestamp if same value
	  -f  force, overwrite old value if present

	attribute is the name
	section is the section
	type is string, integer or blob
	value is what you want it set to

EOH
}

my $searchfor = shift;
my $attribute = shift;
my $section = shift;
my $type = shift;
my $value = shift;

my $hostdb = HOSTDB::DB->new (inifile => HOSTDB::get_inifile (),
			      debug => $debug
			     );

my @host_refs = $hostdb->findhost ('guess', $searchfor);
if ($hostdb->{error}) {
	die ("$0: $hostdb->{error}\n");
}

if (@host_refs) {
	if (scalar @host_refs != 1) {
		my @hl;

		foreach my $host (@host_refs) {
			push (@hl, sprintf ("%s %s %s %s\n", $host->id, $host->ip, $host->hostname, $host->mac_address));
		}

		die ("$0: Host match pattern '$searchfor' is ambigous. Hosts matching :\n@hl\n");
	}

	my $host = shift @host_refs;

	$host->init_attributes ();

	my $attr = $host->get_attribute ($attribute, $section);

	my $old_value = 'none';
	$old_value = $attr->get () if (defined ($attr));
	
	print ("Found attribute $attr (value '$old_value')\n") if ($debug);
	
	if (defined ($attr)) {
		my $old_type = $attr->type ();
		if ($old_value eq $value) {
			if ($update) {
				print ("Updating lastupdated timestamp since value remains the same.\n") if ($verbose);
				$attr->lastupdated ('NOW') or die ("$0: Could not update lastupdated timestamp - $host->{error}\n");
				$attr->commit () or die ("$0: Could not commit host attribute object - $host->{error}\n");
			} else {
				print ("Value remains the same. Not updating lastupdated timestamp since -u was not supplied.\n") if ($verbose);
			}
		} else {
			if ($force) {
				print ("Changing value for existing attribute from '$old_value' (type '$old_type') to '$value' (type '$type').\n") if ($verbose);
				$attr->set ($type, $value) or die ("$0: Could not set value '$value' of type '$type' - $attr->{error}\n");
				$attr->lastupdated ('NOW') or die ("$0: Could not update lastupdated timestamp - $host->{error}\n");
				$attr->lastmodified ('NOW') or die ("$0: Could not update lastmodified timestamp - $host->{error}\n");
				$attr->commit () or die ("$0: Could not commit host attribute object - $host->{error}\n");
			} else {
				print ("NOT changing value (from '$old_value' to '$value') for existing attribute since -f was not supplied.\n") if ($verbose);
				exit(1);
			}
		}
	} else {
		print ("Creating new attribute.\n") if ($verbose);
		
		# new attribute
		$attr = $host->create_hostattribute ();
		$attr->key ($attribute);
		$attr->section ($section);
		$attr->set ($type, $value) or die ("$0: Could not set value '$value' of type '$type' - $host->{error}\n");
		$attr->commit () or die ("$0: Could not commit host attribute object - $host->{error}\n");
	}

	exit (0);
} else {
	die ("$0: No host matches '$searchfor'\n");
}
