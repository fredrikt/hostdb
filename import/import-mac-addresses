#!/usr/local/bin/perl
#
# $Id$
#
# script to set mac addresses on hosts in the database based on output of
# cisco command
#
#	terminal length 0
#	sh ip arp
#

use strict;
use Config::IniFiles;
#use lib 'blib/lib';
use HOSTDB;

my $debug = 0;
my @files = @ARGV;
my $default_ttl;

if ($#files == -1) {
	die ("Syntax: $0 file\n");
}

if ($files[0] eq "-readfile") {
	my $rf = shift (@files);
	$rf = shift (@files);	# rf is now argument to -readfile

	open (FIL, "< $rf") or die("Could not open file '$rf' for reading: $!\n");

	my $line;
	while ($line = <FIL>) {
		chomp($line);
		push (@files, $line);
	}
	close (FIL);
}

my $hostdbini = Config::IniFiles->new (-file => HOSTDB::get_inifile ());

my $hostdb = HOSTDB::DB->new (dsn => $hostdbini->val ('db', 'dsn'),
			  db => $hostdbini->val ('db', 'database'),
			  user => $hostdbini->val ('db', 'user'),
			  password => $hostdbini->val ('db', 'password'),
			  debug => $debug
			 );

my $total_set_count = 0;
my $total_failed_count = 0;
my $total_duplicate_count = 0;
my $total_ignore_count = 0;

my ($set_count, $failed_count, %seen);
foreach my $file (@files) {
	$set_count = 0;
	$failed_count = 0;

	open (FIL, "< $file") or die ("Could not open $file for reading: $!\n");

	while (my $rad = <FIL>) {
		chomp ($rad);

		if ($rad =~ /^Internet\s+([0-9\.]+)\s+(\d|\-)+\s+([0-9a-f\.]+)\s+/) {
			my ($ip, $mac) = ($1, $3);

			my $is_dynamic = 0;
		
			$hostdb->clean_mac_address ($mac);
			warn ("Invalid MAC address '$3' on $file:$.\n"), next unless ($hostdb->valid_mac_address ($mac));

			# shortcut as early as possible if we've seen this ip and mac earlier this run
			if (defined ($seen{$ip}{count})) {
				if ($seen{$ip}{$mac}) {
					warn("Ignoring MAC ($mac) for IP $ip (seen $seen{count} MACs for this IP))\n");
					$total_duplicate_count++;
				}
				
				if ($seen{$ip}{count} >= 5 and ! defined ($seen{$ip}{dynamic})) {
					$is_dynamic = 1;
				} else {
					next;
				}
			}
			$seen{$ip}{count}++ if (undef ($seen{$ip}{$mac}));
			$seen{$ip}{$mac} = 1;

			#warn ("IP $ip MAC $mac\n");
			my $host = $hostdb->findhostbyip ($ip);
		
			if (! defined ($host->id ())) {
				warn ("$ip not found in database\n");
				$failed_count++;
				$total_failed_count++;
			} else {
				my $valid = 1;

				$is_dynamic = 1 if ($host->hostname () =~ /^.*dhcp.*/oi);
				
				if ($is_dynamic) {
					printf ("Set IP $ip to dynamic\n");

					$host->mac ("") or warn ($host->{error}), $valid = 0;
					$host->dynamic ("Y") or warn ($host->{error}), $valid = 0;

					$host->commit () if ($valid);
					next;
				}

				next if ($host->mac_address () eq $mac);
				
				$host->mac_address ($mac) or warn ($host->{error}), $valid = 0;
				if ($valid) {
					$host->commit();
					
					$set_count++;
					$total_set_count++;

					printf("%-6d %-16s %s\n", $total_set_count, $ip, $mac);
				} else {
					$failed_count++;
					$total_failed_count++;
				}
			}
		}
	}
	close (FIL);
	
	print ("$file: set $set_count MAC addresses, failed to set $failed_count\n");
}

print("\n\nTotal statistics:\n",
	"	set:	$total_set_count\n",
	"	failed:	$total_failed_count\n",
	"	dup:	$total_duplicate_count\n",
	"	ign:	$total_ignore_count\n",
	"\n");

print ("done\n");
