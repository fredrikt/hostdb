#!/usr/bin/perl
#
# $Id$
#
# script to set mac addresses on hosts in the database based on output of
# cisco command
#
#	terminal length 0
#	sh ip arp
#

use strict;
use Config::IniFiles;
#use lib 'blib/lib';
use HOSTDB;

my $debug = 0;
my @files = @ARGV;
my $default_ttl;

if ($#files == -1) {
	die ("Syntax: $0 file\n");
}

if ($files[0] eq "-readfile") {
	my $rf = shift (@files);
	$rf = shift (@files);	# rf is now argument to -readfile

	open (FIL, "< $rf") or die("Could not open file '$rf' for reading: $!\n");

	my $line;
	while ($line = <FIL>) {
		chomp($line);
		push (@files, $line);
	}
	close (FIL);
}

my $hostdbini = Config::IniFiles->new (-file => '/usr/local/etc/hostdb.ini');

my $hostdb = HOSTDB::DB->new (dsn => $hostdbini->val ('db', 'dsn'),
			  db => $hostdbini->val ('db', 'database'),
			  user => $hostdbini->val ('db', 'user'),
			  password => $hostdbini->val ('db', 'password'),
			  debug => $debug
			 );

my $total_set_count = 0;
my $total_failed_count = 0;
my $total_duplicate_count = 0;
my $total_ignore_count = 0;

my ($set_count, $failed_count, %seen);
foreach my $file (@files) {
	$set_count = 0;
	$failed_count = 0;

	open (FIL, "< $file") or die ("Could not open $file for reading: $!\n");

	while (my $rad = <FIL>) {
		chomp ($rad);

		if ($rad =~ /^Internet\s+([0-9\.]+)\s+(\d|\-)+\s+([0-9a-f\.]+)\s+/) {
			my ($ip, $mac) = ($1, $3);
		
			$hostdb->clean_mac_address ($mac);
			warn ("Invalid MAC address '$3' on $file:$.\n"), next unless ($hostdb->valid_mac_address ($mac));

			# shortcut as early as possible if we've seen this ip and mac earlier this run
			if ($seen{$ip}) {
				if ($seen{$ip} ne $mac) {
					warn("Ignoring additional MAC address ($mac) for IP $ip ($seen{$ip})\n");
					$total_duplicate_count++;
				}
				
				next;
			}
			$seen{$ip} = $mac;

			#warn ("IP $ip MAC $mac\n");
			my $host = $hostdb->findhostbyip ($ip);
		
			if (! defined ($host->{id})) {
				warn ("$ip not found in database\n");
				$failed_count++;
				$total_failed_count++;
			} else {
				if ($host->{hostname} =~ /^.*dhcp.*/oi) {
					warn ("Ignoring dynamic host $ip ($host->{hostname})\n");
					$total_ignore_count++;
				}

				my $valid = 1;

				next if ($host->{mac} eq $mac);
				
				$host->set_mac_address ($mac) or warn ($host->{error}), $valid = 0;
				if ($valid) {
					$host->commit();
					
					$set_count++;
					$total_set_count++;

					printf("%-6d %-16s %s\n", $total_set_count, $ip, $mac);
				} else {
					$failed_count++;
					$total_failed_count++;
				}
			}
		}

	}
	close (FIL);
	
	print ("$file: set $set_count mac addresses, failed to set $failed_count\n");
}

print("\n\nTotal statistics:\n",
	"	set:	$total_set_count\n",
	"	failed:	$total_failed_count\n",
	"	dup:	$total_duplicate_count\n",
	"	ign:	$total_ignore_count\n",
	"\n");

print ("done\n");
