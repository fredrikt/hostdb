#!/usr/local/bin/perl -w
#
# $Id
#
# script to generate named.conf files
#

use strict;
use HOSTDB;
use Getopt::Std;
use vars qw ($opt_h $opt_d $opt_m $opt_s);

getopts ('hdms:');

my $debug = defined ($opt_d);
my $gen_master = defined ($opt_m);

if ($opt_h or (! $opt_s and ! $opt_m)) {
	die (<<EOT);
Syntax: $0 -s or -m [options]
	options :
		-d	debug output
		-s IP	generate slave config, fetch zones from IP
		-m	generate master config

EOT
}

my $hostdb = HOSTDB::DB->new (inifile => HOSTDB::get_inifile (),
			      debug => $debug
			     );

foreach my $zone ($hostdb->findallzones ()) {
	next if ($zone->delegated () eq "Y");

	my $zonename = $zone->zonename ();
	
	my $z = tab_format (4, "zone \"$zonename\"");

	my $options = '';

	# XXX make this a configuration file thingy instead
	if ($zonename =~ /\.e164\.sunet\.se$/ or
	    $zonename =~ /\.e164\.arpa$/) {
		$options = 'allow-transfer { any; }; ';
	}

	if ($zonename =~ /\.168\.192\.in-addr\.arpa$/ or
	    $zonename =~ /\.10\.in-addr\.arpa$/ or
	    $zonename =~ /\.(16|17|18|19|2\d|31|32)\.172\.in-addr\.arpa$/ or
	    $zonename =~ /\.local\.su\.se$/ or $zonename eq 'local.su.se') {
		$options = 'allow-query { rfc1918-query-acl; }; ';
	}

	if ($gen_master) {
		print ("$z	{ type master; file \"/approved/$zonename..ZONE\"; $options};\n");
	} else {
		print ("$z	{ type slave; masters { $opt_s; }; file \"/slave/$zonename..DUMP\"; $options};\n");
	}
}

exit (0);


sub tab_format
{
	my $tab_count = shift;
	my $string = shift;

	my $minus_tabs = int (length ($string) / 8);

	return $string . "	" x ($tab_count - $minus_tabs);
}
