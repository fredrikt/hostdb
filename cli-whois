#!/usr/local/bin/perl
#
# $Id$
#
# script to search for IP addresses or mac addresses
#

use strict;
use Config::IniFiles;
#use lib 'blib/lib';
use HOSTDB;

my $debug = 0;
if ($ARGV[0] eq "-d") {
	shift (@ARGV);
	$debug = 1;
}

my $hostdbini = Config::IniFiles->new (-file => HOSTDB::get_inifile ());

my $hostdb = HOSTDB::DB->new (dsn => $hostdbini->val ('db', 'dsn'),
			  db => $hostdbini->val ('db', 'database'),
			  user => $hostdbini->val ('db', 'user'),
			  password => $hostdbini->val ('db', 'password'),
			  debug => $debug
			 );

my @searchfor = @ARGV;

if ($#searchfor == -1) {
	die ("Syntax: $0 [-d] <IP/FQDN/MAC> ...\n");
}

my $first = 1;
while ($ARGV[0]) {
	my @host_refs;
	my $search_for = shift;

	my $t = $search_for;

	# check if it is a mac-address
	if ($hostdb->clean_mac_address ($t)) {
		$search_for = $t;
		
		@host_refs = $hostdb->findhostbymac ($search_for);
	} elsif ($hostdb->is_valid_ip ($search_for)) {
		@host_refs = $hostdb->findhostbyip ($search_for);
	} elsif ($hostdb->is_valid_fqdn ($search_for)) {
		@host_refs = $hostdb->findhostbyname ($search_for);
	} else {
		die ("Don't recognize '$search_for'\n");
	}

	if (@host_refs) {
		foreach my $host (@host_refs) {
			print ("Host :\n\n");
		
			# interpolation
			my $id = $host->id ();
			my $parent = $host->partof ()?$host->partof ():"-";
			my $ip = $host->ip ();
			my $mac = $host->mac_address () || "n/a";
			my $mac_ts = $host->mac_address_ts () || "no timestamp";
			my $hostname = $host->hostname ();
			my $user = $host->user ();
			my $owner = $host->owner ();

			print (<<EOH);
	ID	$id
	Parent	$parent
	---
	IP address	$ip
	MAC address	$mac ($mac_ts)
	Hostname	$hostname
	User		$user
	Owner		$owner
	
EOH
			
			my $subnet = $hostdb->findsubnetclosestmatch ($host->ip ());
		
			if ($subnet) {
				printf ("	%-23s %-20s %s\n", "subnet", "netmask", "description");
				
				printf ("	%-23s %-20s %s\n", $subnet->subnet(),
						$subnet->netmask (), $subnet->description ());
		
				print ("\n");
			} else {
				print ("Could not find a subnet in database\n\n");
			}
		}
			
		print ("---\n\n");
	}
}
