#!/usr/local/bin/perl -w
#
# $Id$
#
# script to read zone entrys from database
#

use strict;
use HOSTDB;
use Getopt::Std;
use vars qw ($opt_h $opt_d $opt_r);

getopts ('hdr');

my $debug = 0;
my $raw = 0;

$debug = 1 if (defined ($opt_d));
$raw = 1 if (defined ($opt_r));

if ($opt_h) {
	die ("Syntax: $0 [options]\n" .
	     "	options :\n" .
	     "		-d debug output\n" .
	     "		-r raw mode, just zone names (for scripting)\n"
	    );
}

my $hostdb = HOSTDB::DB->new (inifile => HOSTDB::get_inifile (),
			      debug => $debug
			     );

my @searchfor = @ARGV;

push (@searchfor, "*") if ($#searchfor == -1);	# search for ALL

foreach my $searchzone (sort @searchfor) {
	if ($searchzone eq "*") {
		print ("search for: ALL ZONES\n") unless ($raw);
	} else {
		print ("search for: '$searchzone'\n") unless ($raw);
	}

	printf ("%-25s %-10s %-15s %s\n", "zonename", "serial", "owner", "delegated") unless ($raw);

	if ($searchzone eq "*") {
		foreach my $zone ($hostdb->findallzones ()) {
			if ($raw) {
				print ($zone->zonename () . "\n");
			} else {
				printf ("%-25s %-10s %-15s %s\n", $zone->zonename (),
					$zone->serial (), $zone->owner (), $zone->delegated ());
			}
		}
	} else {
		foreach my $zone ($hostdb->findzonebyname ($searchzone)) {
			if ($raw) {
				print ($zone->zonename () . "\n");
			} else {
				printf ("%-25s %-10s %-15s %s\n", $zone->zonename (), $zone->serial (),
					$zone->owner (), $zone->delegated ());
			}
		}
	}

	print ("\n") unless ($raw);
}
