#!/usr/bin/perl
#
# $Id$
#
# script to search for host entrys
#

use strict;
use Config::IniFiles;
#use lib 'blib/lib';
use HOSTDB;

my $debug = 0;
if ($ARGV[0] eq "-d") {
	shift (@ARGV);
	$debug = 1;
}

my $hostdbini = Config::IniFiles->new (-file => '/usr/local/etc/hostdb.ini');

my $hostdb = HOSTDB::DB->new (dsn => $hostdbini->val ('db', 'dsn'),
			  db => $hostdbini->val ('db', 'database'),
			  user => $hostdbini->val ('db', 'user'),
			  password => $hostdbini->val ('db', 'password'),
			  debug => $debug
			 );

my @searchfor = @ARGV;

if ($#searchfor == -1) {
	die ("Syntax: $0 [-d] netaddr/slash [longer-prefixes] ...\n");
}

my $first = 1;
while ($ARGV[0]) {
	my $longer_prefix = 0;

	my $subnet = shift;

	if (defined ($ARGV[0]) and $ARGV[0] =~ /^l/o) {
		$longer_prefix = 1;
		shift (@ARGV);
	}

	if ($hostdb->check_valid_subnet ($subnet)) {
		my @subnets;
		
		if ($longer_prefix) {
			@subnets = $hostdb->findsubnetlongerprefix ($subnet);
		} else {
			@subnets = $hostdb->findsubnet ($subnet);
		}
		
		if ($#subnets != -1) {
			my $subnet;
			
			if ($first) {
				$first = 0;
				printf ("%-23s %-20s %s\n", "subnet", "netmask", "description");
			}
				
			foreach $subnet (@subnets) {
				printf ("%-23s %-20s %s\n", $subnet->subnet(),
					$subnet->netmask (), $subnet->description ());
			}
			
			print ("\n");
		}
	} else {
		warn ("Ignoring invalid subnet '$subnet'\n");
	}
}
